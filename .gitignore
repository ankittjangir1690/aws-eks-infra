# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data such as
# password, private keys, and other secrets. These should not be part of version
# control as they are data points which are potentially sensitive and subject
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*
*.tfplan
*.tfplan.json

# Ignore CLI configuration files
.terraformrc
terraform.rc

# Ignore lock files (optional - some teams prefer to version control these)
# .terraform.lock.hcl

# Ignore any local backup files
*.backup
*.bak

# Ignore any local environment files
.env
.env.local
.env.*.local

# Ignore any local secrets files
secrets.tf
secrets.tfvars

# Ignore any local override files
override.tf
override.tfvars

# Ignore any local test files
test/
tests/

# Ignore any local documentation
docs/

# Ignore any local scripts
scripts/

# Ignore any local logs
logs/
*.log

# Ignore any local temporary files
tmp/
temp/
*.tmp

# Ignore any local IDE files
.vscode/
.idea/
*.swp
*.swo
*~

# Ignore any local OS files
.DS_Store
Thumbs.db

# Ignore any local AWS credentials
.aws/
credentials
config

# Ignore any local Terraform cache
.terraform/
.terraform.lock.hcl
